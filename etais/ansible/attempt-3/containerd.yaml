- hosts:
    - masters
  become: yes
  tasks:
    - name: Install dependencies
      apt:
        update_cache: yes
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - gnupg2
        - software-properties-common
        - apt-transport-https
        - ca-certificates

    - name: Add Docker apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Get linux release
      shell: lsb_release -cs
      register: linux_release

    - name: Add Docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ linux_release.stdout }} stable
        state: present

    - name: Instal containerd
      apt:
        update_cache: yes
        name: containerd.io
        state: present

    - name: Configure containerd so that it starts using systemd as cgroup
      shell: |
        mkdir -p /etc/containerd
        containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Edit the file /var/lib/kubelet/kubeadm-flags.env and add the containerd runtime to the flags. --container-runtime=remote and --container-runtime-endpoint=unix:///run/containerd/containerd.sock
      shell: |
        sed -i 's/--container-runtime=remote/--container-runtime=remote --container-runtime-endpoint=unix:\/\/\/run\/containerd\/containerd.sock/g' /var/lib/kubelet/kubeadm-flags.env
        systemctl restart kubelet

    - name: Restart and enable containerd service
      service:
        name: containerd
        state: restarted
        enabled: yes
